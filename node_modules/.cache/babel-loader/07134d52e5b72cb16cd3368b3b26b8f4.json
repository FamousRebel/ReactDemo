{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Workspace-React\\\\work\\\\src\\\\Test.js\";\nimport React, { Component } from \"react\";\nimport TitleName from \"./assembly/TitleName\";\nimport SearchTask from \"./assembly/SearchTask\";\nimport UngroupedTasks from \"./assembly/UngroupedTasks\";\nimport NewTask from \"./assembly/NewTask\";\nimport TaskSituation from \"./assembly/TaskSituation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      List: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(TitleName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UngroupedTasks, {\n        List: this.state.List\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n        send: this.send.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskSituation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  send(listValue) {\n    console.log(listValue);\n    this.setState({\n      List: listValue\n    });\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["F:/Workspace/Workspace-React/work/src/Test.js"],"names":["React","Component","TitleName","SearchTask","UngroupedTasks","NewTask","TaskSituation","Test","constructor","props","state","inputValue","List","render","send","bind","listValue","console","log","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA4B;AACxBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,UAAU,EAAC,EADH;AAERC,MAAAA,IAAI,EAAE;AAFE,KAAZ;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,cAAD;AACI,QAAA,IAAI,EAAI,KAAKH,KAAL,CAAWE;AADvB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI,QAAC,OAAD;AACI,QAAA,IAAI,EAAE,KAAKE,IAAL,CAAUC,IAAV,CAAe,IAAf;AADV;AAAA;AAAA;AAAA;AAAA,cANJ,eASI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AACDD,EAAAA,IAAI,CAACE,SAAD,EAAW;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,SAAKG,QAAL,CAAc;AACVP,MAAAA,IAAI,EAACI;AADK,KAAd;AAGH;;AA5BuB;;AA8B5B,eAAeT,IAAf","sourcesContent":["import React,{Component} from \"react\";\r\nimport TitleName from \"./assembly/TitleName\";\r\nimport SearchTask from \"./assembly/SearchTask\";\r\nimport UngroupedTasks from \"./assembly/UngroupedTasks\";\r\nimport NewTask from \"./assembly/NewTask\";\r\nimport TaskSituation from \"./assembly/TaskSituation\";\r\n\r\nclass Test extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            inputValue:'',\r\n            List: []\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"box\">\r\n                <TitleName/>\r\n                <SearchTask/>\r\n                <UngroupedTasks\r\n                    List = {this.state.List}\r\n                />\r\n                <NewTask\r\n                    send={this.send.bind(this)}\r\n                />\r\n                <TaskSituation/>\r\n            </div>\r\n        );\r\n    }\r\n    send(listValue){\r\n        console.log(listValue);\r\n        this.setState({\r\n            List:listValue\r\n        })\r\n    }\r\n}\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}