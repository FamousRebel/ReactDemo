{"ast":null,"code":"var _jsxFileName = \"F:\\\\Workspace\\\\Workspace-React\\\\work\\\\src\\\\Components\\\\NewTask.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showElem: true\n    }; // this.inputChange = this.inputChange.bind(this);\n\n    this.addList = this.addList.bind(this);\n    this.showBox = this.showBox.bind(this);\n  }\n\n  render() {\n    const showBox = this.state.showElem;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxNew\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"newBtn\",\n        onClick: this.showBox,\n        style: {\n          display: showBox ? 'block' : 'none'\n        },\n        children: \"\\u65B0\\u5EFA\\u4EFB\\u52A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newBox\",\n        style: {\n          display: showBox ? 'none' : 'block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"boxText\",\n          children: \"\\u65B0\\u5EFA\\u4EFB\\u52A1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"boxText\",\n          ref: c => this.boxText = c,\n          className: \"boxText\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boxBtn\",\n          onClick: this.addList,\n          children: \"\\u4FDD\\u5B58\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  showBox() {\n    // 按钮与输入框之间的显示/隐藏 切换\n    this.setState({\n      showElem: !this.state.showElem\n    });\n  }\n\n  addList() {\n    // 判断是否为空\n    if (this.boxText.value === '') alert(\"添加任务不能为空\");else {\n      console.log(this.boxText.value); // 创建对象\n\n      const listObj = {\n        id: this.props.len + 1 + this.boxText.value,\n        name: this.boxText.value,\n        done: false\n      };\n      this.props.addItem(listObj);\n      this.boxText.value = '';\n    }\n  }\n\n}\n\nNewTask.propTypesr = {\n  addItem: PropTypes.func,\n  len: PropTypes.number\n};\nexport default NewTask;","map":{"version":3,"sources":["F:/Workspace/Workspace-React/work/src/Components/NewTask.js"],"names":["React","Component","PropTypes","NewTask","constructor","props","state","showElem","addList","bind","showBox","render","display","c","boxText","setState","value","alert","console","log","listObj","id","len","name","done","addItem","propTypesr","func","number"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC;AADA,KAAb,CAFe,CAKf;;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAMD,OAAO,GAAG,KAAKJ,KAAL,CAAWC,QAA3B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,OAAO,EAAE,KAAKG,OAFlB;AAGI,QAAA,KAAK,EAAE;AACHE,UAAAA,OAAO,EAAEF,OAAO,GAAG,OAAH,GAAa;AAD1B,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,KAAK,EAAE;AACHE,UAAAA,OAAO,EAAEF,OAAO,GAAG,MAAH,GAAY;AADzB,SAFX;AAAA,gCAMI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AACI,UAAA,EAAE,EAAC,SADP;AAEI,UAAA,GAAG,EAAEG,CAAC,IAAI,KAAKC,OAAL,GAAeD,CAF7B;AAGI,UAAA,SAAS,EAAC,SAHd;AAII,UAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAaI;AACI,UAAA,SAAS,EAAC,QADd;AAEI,UAAA,OAAO,EAAE,KAAKL,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCH;;AACDE,EAAAA,OAAO,GAAE;AACL;AACA,SAAKK,QAAL,CAAc;AACVR,MAAAA,QAAQ,EAAC,CAAC,KAAKD,KAAL,CAAWC;AADX,KAAd;AAGH;;AACDC,EAAAA,OAAO,GAAE;AACL;AACA,QAAG,KAAKM,OAAL,CAAaE,KAAb,KAAuB,EAA1B,EACIC,KAAK,CAAC,UAAD,CAAL,CADJ,KAEK;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,OAAL,CAAaE,KAAzB,EADC,CAED;;AACA,YAAMI,OAAO,GAAG;AAACC,QAAAA,EAAE,EAAG,KAAKhB,KAAL,CAAWiB,GAAX,GAAe,CAAhB,GAAmB,KAAKR,OAAL,CAAaE,KAArC;AAA2CO,QAAAA,IAAI,EAAE,KAAKT,OAAL,CAAaE,KAA9D;AAAoEQ,QAAAA,IAAI,EAAE;AAA1E,OAAhB;AACA,WAAKnB,KAAL,CAAWoB,OAAX,CAAmBL,OAAnB;AACA,WAAKN,OAAL,CAAaE,KAAb,GAAqB,EAArB;AACH;AACJ;;AAhE0B;;AAmE/Bb,OAAO,CAACuB,UAAR,GAAqB;AACjBD,EAAAA,OAAO,EAACvB,SAAS,CAACyB,IADD;AAEjBL,EAAAA,GAAG,EAACpB,SAAS,CAAC0B;AAFG,CAArB;AAIA,eAAezB,OAAf","sourcesContent":["import React,{Component} from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass NewTask extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showElem:true\r\n        }\r\n        // this.inputChange = this.inputChange.bind(this);\r\n        this.addList = this.addList.bind(this);\r\n        this.showBox = this.showBox.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const showBox = this.state.showElem;\r\n        return(\r\n            <div className=\"boxNew\">\r\n                <button\r\n                    className=\"newBtn\"\r\n                    onClick={this.showBox}\r\n                    style={{\r\n                        display: showBox ? 'block' : 'none'\r\n                    }}\r\n                >\r\n                    新建任务\r\n                </button>\r\n                <div\r\n                    className=\"newBox\"\r\n                    style={{\r\n                        display: showBox ? 'none' : 'block'\r\n                    }}\r\n                >\r\n                    <label htmlFor=\"boxText\">新建任务:</label>\r\n                    <input\r\n                        id=\"boxText\"\r\n                        ref={c => this.boxText = c}\r\n                        className=\"boxText\"\r\n                        type=\"text\"\r\n                    />\r\n                    <button\r\n                        className=\"boxBtn\"\r\n                        onClick={this.addList}\r\n                    >\r\n                        保存\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    showBox(){\r\n        // 按钮与输入框之间的显示/隐藏 切换\r\n        this.setState({\r\n            showElem:!this.state.showElem\r\n        })\r\n    }\r\n    addList(){\r\n        // 判断是否为空\r\n        if(this.boxText.value === '')\r\n            alert(\"添加任务不能为空\");\r\n        else {\r\n            console.log(this.boxText.value);\r\n            // 创建对象\r\n            const listObj = {id: (this.props.len+1)+this.boxText.value,name: this.boxText.value,done: false}\r\n            this.props.addItem(listObj);\r\n            this.boxText.value = '';\r\n        }\r\n    }\r\n}\r\n\r\nNewTask.propTypesr = {\r\n    addItem:PropTypes.func,\r\n    len:PropTypes.number\r\n}\r\nexport default NewTask;"]},"metadata":{},"sourceType":"module"}